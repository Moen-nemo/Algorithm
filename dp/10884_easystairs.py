n = int(input())  # 입력값 N을 정수로 받음 (계단 수의 길이)

MOD = 1000000000  # 결과를 나눌 값 (문제에서 요구)

# dp[i][j] = 길이가 i이고 마지막 숫자가 j인 계단 수의 개수
dp = [[0] * 10 for _ in range(n + 1)]  # dp 테이블 초기화 (0~n까지 사용하므로 n+1행)

# 길이가 1인 계단 수는 1~9로 시작하는 수 (0은 안됨)
# 따라서 각 dp[1][1~9]에 1을 설정
for i in range(1, 10):
    dp[1][i] = 1

# 길이 2 이상부터 DP 계산
for i in range(2, n + 1):  # i는 현재 자릿수 (2부터 N까지)
    for j in range(10):   # j는 마지막 숫자 (0부터 9까지)
        if j > 0:
            dp[i][j] += dp[i - 1][j - 1]  # j보다 1 작은 숫자로 끝나는 (i-1)자리 수에서 올 수 있음
        if j < 9:
            dp[i][j] += dp[i - 1][j + 1]  # j보다 1 큰 숫자로 끝나는 (i-1)자리 수에서 올 수 있음
        dp[i][j] %= MOD  # 중간 결과를 1,000,000,000으로 나눈 나머지로 유지 (오버플로우 방지)

# 길이가 n이고 마지막 숫자가 0~9인 계단 수의 총합이 정답
print(sum(dp[n]) % MOD)